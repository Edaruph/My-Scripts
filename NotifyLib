local players = game:GetService("Players")
local tweenService = game:GetService("TweenService")
local runService = game:GetService("RunService")
local coreGui = game:GetService("CoreGui")

local viewport = game.Workspace.CurrentCamera.ViewportSize

local Library = {}
GUI = {}

function Library:validate(defaults, options)
	for i, v in pairs(defaults) do
		if options[i] == nil then
			options[i] = v
		end
	end
	return options
end

function Library:new(options)
	options = Library:validate({
		name = "Ethernality.wtf"
	}, options or {})
	
	local GUI = {}
	-- main
	do
		GUI["1"] = Instance.new("ScreenGui", runService:IsStudio() and players.LocalPlayer:WaitForChild("PlayerGui") or coreGui);
		GUI["1"]["Name"] = [[Loader]];
		GUI["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;

		-- StarterGui.Loader.Main
		GUI["2"] = Instance.new("Frame", GUI["1"]);
		GUI["2"]["BorderSizePixel"] = 0;
		GUI["2"]["BackgroundColor3"] = Color3.fromRGB(15, 15, 15);
		GUI["2"]["Size"] = UDim2.new(0, 324, 0, 144);
		GUI["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["2"]["Position"] = UDim2.new(1, -334, 1, -154); 
		GUI["2"]["Name"] = [[Main]];

		-- StarterGui.Loader.Main.Frame
		GUI["3"] = Instance.new("Frame", GUI["2"]);
		GUI["3"]["BorderSizePixel"] = 0;
		GUI["3"]["BackgroundColor3"] = Color3.fromRGB(72, 72, 72);
		GUI["3"]["Size"] = UDim2.new(0, 324, 0, 1);
		GUI["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["3"]["Position"] = UDim2.new(0, 0, 0.17936992645263672, 0);

		-- StarterGui.Loader.Main.DropShadowHolder
		GUI["4"] = Instance.new("Frame", GUI["2"]);
		GUI["4"]["ZIndex"] = 0;
		GUI["4"]["BorderSizePixel"] = 0;
		GUI["4"]["BackgroundTransparency"] = 1;
		GUI["4"]["Size"] = UDim2.new(1, 0, 1, 0);
		GUI["4"]["Name"] = [[DropShadowHolder]];

		-- StarterGui.Loader.Main.DropShadowHolder.DropShadow
		GUI["5"] = Instance.new("ImageLabel", GUI["4"]);
		GUI["5"]["ZIndex"] = 0;
		GUI["5"]["BorderSizePixel"] = 0;
		GUI["5"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
		GUI["5"]["ScaleType"] = Enum.ScaleType.Slice;
		GUI["5"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["5"]["ImageTransparency"] = 0.5;
		GUI["5"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
		GUI["5"]["Image"] = [[rbxassetid://6014261993]];
		GUI["5"]["Size"] = UDim2.new(1, 47, 1, 47);
		GUI["5"]["Name"] = [[DropShadow]];
		GUI["5"]["BackgroundTransparency"] = 1;
		GUI["5"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

		-- StarterGui.Loader.Main.UIStroke
		GUI["a"] = Instance.new("UIStroke", GUI["2"]);
		GUI["a"]["Color"] = Color3.fromRGB(72, 72, 72);

		-- StarterGui.Loader.Main.Title
		GUI["6"] = Instance.new("TextLabel", GUI["2"]);
		GUI["6"]["BorderSizePixel"] = 0;
		GUI["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["6"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		GUI["6"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
		GUI["6"]["TextSize"] = 14;
		GUI["6"]["TextColor3"] = Color3.fromRGB(203, 83, 148);
		GUI["6"]["Size"] = UDim2.new(0, 304, 0, 27);
		GUI["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["6"]["Text"] = options["name"]
		GUI["6"]["Name"] = [[Title]];
		GUI["6"]["BackgroundTransparency"] = 1;

		-- StarterGui.Loader.Main.Title.UIPadding
		GUI["7"] = Instance.new("UIPadding", GUI["6"]);
		GUI["7"]["PaddingLeft"] = UDim.new(0, 7);
	end
	
	

	function GUI:CreateImage(options)
		options = Library:validate({
			image = ""
		}, options or {})

		local GameImage = {}

		GameImage["b"] = Instance.new("ImageLabel", GUI["2"]);
		GameImage["b"]["BorderSizePixel"] = 0;
		GameImage["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GameImage["b"]["Image"] = options.image;
		GameImage["b"]["Size"] = UDim2.new(0, 92, 0, 86);
		GameImage["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		GameImage["b"]["Name"] = [[Game Image]];
		GameImage["b"]["Position"] = UDim2.new(0.02631578966975212, 0, 0.2291666716337204, 0);

		-- StarterGui.Loader.Main.Game Image.UIStroke
		GameImage["c"] = Instance.new("UIStroke", GameImage["b"]);
		GameImage["c"]["Color"] = Color3.fromRGB(72, 72, 72);

		return GameImage
	end
	
	function GUI:CreateTitle(options)
		options = Library:validate({
			name = ""
		}, options or {})
		
		local Title = {}
		
		-- StarterGui.Loader.Main.Game Name
		Title["d"] = Instance.new("TextLabel", GUI["2"]);
		Title["d"]["TextWrapped"] = true;
		Title["d"]["BorderSizePixel"] = 0;
		Title["d"]["RichText"] = true;
		Title["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		Title["d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		Title["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
		Title["d"]["TextSize"] = 14;
		Title["d"]["TextColor3"] = Color3.fromRGB(203, 83, 148);
		Title["d"]["Size"] = UDim2.new(0, 186, 0, 12);
		Title["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Title["d"]["Text"] = options.name;
		Title["d"]["Name"] = options.name;
		Title["d"]["BackgroundTransparency"] = 1;
		Title["d"]["Position"] = UDim2.new(0.3400340974330902, 0, 0.22476281225681305, 0);

		-- StarterGui.Loader.Main.Game Name.UIPadding
		Title["e"] = Instance.new("UIPadding", Title["d"]);
		Title["e"]["PaddingLeft"] = UDim.new(0, 7);
		
		return Title
	end
	
	function GUI:CreateParagraph(options)
		options = Library:validate({
			text = ""
		}, options or {})

		local Paragraph = {}

		-- StarterGui.Loader.Main.Paragraph
		Paragraph["8"] = Instance.new("TextLabel", GUI["2"]);
		Paragraph["8"]["TextWrapped"] = true;
		Paragraph["8"]["BorderSizePixel"] = 0;
		Paragraph["8"]["RichText"] = true;
		Paragraph["8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		Paragraph["8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		Paragraph["8"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
		Paragraph["8"]["TextSize"] = 14;
		Paragraph["8"]["TextColor3"] = Color3.fromRGB(203, 83, 148);
		Paragraph["8"]["Size"] = UDim2.new(0, 304, 0, 24);
		Paragraph["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Paragraph["8"]["Text"] = options.text
		Paragraph["8"]["Name"] = [[Paragraph]];
		Paragraph["8"]["BackgroundTransparency"] = 1;
		Paragraph["8"]["Position"] = UDim2.new(0, 0, 0.8289294838905334, 0);

		-- StarterGui.Loader.Main.Paragraph.UIPadding
		Paragraph["9"] = Instance.new("UIPadding", Paragraph["8"]);
		Paragraph["9"]["PaddingLeft"] = UDim.new(0, 7);
		
		return Paragraph
	end
	
	function GUI:CreateUpdates(options)
		options = Library:validate({
			text = ""
		}, options or {})

		local Updates = {}
		-- StarterGui.Loader.Main.Updates
		Updates["11"] = Instance.new("TextLabel", GUI["2"]);
		Updates["11"]["TextWrapped"] = true;
		Updates["11"]["BorderSizePixel"] = 0;
		Updates["11"]["RichText"] = true;
		Updates["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		Updates["11"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		Updates["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
		Updates["11"]["TextSize"] = 14;
		Updates["11"]["TextColor3"] = Color3.fromRGB(203, 83, 148);
		Updates["11"]["Size"] = UDim2.new(0, 186, 0, 12);
		Updates["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Updates["11"]["Text"] = options.text
		Updates["11"]["Name"] = [[Updates]];
		Updates["11"]["BackgroundTransparency"] = 1;
		Updates["11"]["Position"] = UDim2.new(0.3400340974330902, 0, 0.34976279735565186, 0);

		-- StarterGui.Loader.Main.Updates.UIPadding
		Updates["12"] = Instance.new("UIPadding", Updates["11"]);
		Updates["12"]["PaddingLeft"] = UDim.new(0, 7);

		-- StarterGui.Loader.Main.UpdatesFrame
		Updates["13"] = Instance.new("ScrollingFrame", GUI["2"]);
		Updates["13"]["Active"] = true;
		Updates["13"]["BorderSizePixel"] = 0;
		Updates["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		Updates["13"]["BackgroundTransparency"] = 1;
		Updates["13"]["Size"] = UDim2.new(0, 198, 0, 52);
		Updates["13"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
		Updates["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Updates["13"]["Position"] = UDim2.new(0.3641975224018097, 0, 0.4652777910232544, 0);
		Updates["13"]["Name"] = [[UpdatesFrame]];

		-- StarterGui.Loader.Main.UpdatesFrame.UIStroke
		Updates["14"] = Instance.new("UIStroke", Updates["13"]);
		Updates["14"]["Color"] = Color3.fromRGB(72, 72, 72);

		-- StarterGui.Loader.Main.UpdatesFrame.UIListLayout
		Updates["15"] = Instance.new("UIListLayout", Updates["13"]);
		Updates["15"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

		function Updates:AddUpdate(options)
			options = Library:validate({
				text = ""
			}, options or {})

			local UpdateLabel = Instance.new("TextLabel", Updates["13"])
			UpdateLabel["TextWrapped"] = true
			UpdateLabel["BorderSizePixel"] = 0
			UpdateLabel["RichText"] = true
			UpdateLabel["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
			UpdateLabel["TextXAlignment"] = Enum.TextXAlignment.Left
			UpdateLabel["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
			UpdateLabel["TextSize"] = 14
			UpdateLabel["TextColor3"] = Color3.fromRGB(255, 255, 255)
			UpdateLabel["Size"] = UDim2.new(0, 198, 0, 12)
			UpdateLabel["BorderColor3"] = Color3.fromRGB(0, 0, 0)
			UpdateLabel["Text"] = options.text
			UpdateLabel["Name"] = "UpdateLabel"
			UpdateLabel["BackgroundTransparency"] = 1

			local UIPadding = Instance.new("UIPadding", UpdateLabel)
			UIPadding["PaddingTop"] = UDim.new(0, 1)
			UIPadding["PaddingLeft"] = UDim.new(0, 3)
		end

		return Updates
	end

    function GUI:Unload()
        GUI["1"]:Destroy()
    end    

	return GUI
end
return Library
