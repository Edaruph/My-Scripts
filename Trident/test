local Config = {
  Esp = {
      Box = {
          Enabled = false,
          FilledColor = Color3.fromRGB(255, 0, 255),
          Filled = false,
          FilledTransparency = 0,
          Color = Color3.fromRGB(255, 0, 255),
      },
      Tracer = {
          Enabled = false,
          Color = Color3.fromRGB(255, 255, 255),
      },
      Sleeper = {
          Enabled = false,
          Text = "Sleeping",
          Color = Color3.fromRGB(255, 255, 255),
          Size = 7
      },
      Armor = {
          Enabled = false,
          Color = Color3.fromRGB(255, 255, 255),
          Size = 7
      },
      Distance = {
          Enabled = false,
          Color = Color3.fromRGB(255, 0, 255),
          Size = 7
      },
      Name = {
          Enabled = false,
          Color = Color3.fromRGB(255, 0, 255),
          Size = 7,
          Outline = false,
      },
      ViewAngle = {
          Enabled = false,
          Color = Color3.fromRGB(255, 0, 255),
      },
      CornerBoxes = {
          Enabled = false,
          Color = Color3.fromRGB(255, 255, 255),
          Size = 5,
          Thickness = 0,
      },
      Health = {
          Enabled = false,
          LowColor = Color3.fromRGB(255, 0, 255),
          HightColor = Color3.fromRGB(0, 0, 255),
      },
      Skeleton = {
          Enabled = false,
          Color = Color3.fromRGB(255, 255, 255),
      },
      Tool = {
          Enabled = false,
          Color = Color3.fromRGB(255, 255, 255),
          Outline = false,
          Size = 10,
      },
  },
}


local Camera = game:GetService("Workspace").CurrentCamera
local Cam = game:GetService("Workspace").CurrentCamera
local SoundService = game:GetService("SoundService")
local Plr = game:GetService("Players").LocalPlayer
local CharacterMiddle = game:GetService("Workspace").Ignore.LocalCharacter.Middle
local Camera = game:GetService("Workspace").Camera
local Camera = game:GetService("Workspace").CurrentCamera
local Cam = game:GetService("Workspace").Camera
local CharcaterMiddle = game:GetService("Workspace").Ignore.LocalCharacter.Middle
local Mouse = game.Players.LocalPlayer:GetMouse()
local lighting = game:GetService("Lighting")
local UserInputService = game:GetService("UserInputService")
local SoundService = game:GetService("SoundService")
local Decimals = 2
local Clock = os.clock()   
local PlayerUpdater = game:GetService("RunService").RenderStepped

local Functions = {}
local InventoryViewer = {Texts={}}
local Esp = {Settings={
  Boxes=false,BoxesOutline=false,BoxesFilled=false,BoxesFilledColor=Color3.fromRGB(255,255,255),BoxesFilledTransparency=0.25,BoxesColor=Color3.fromRGB(255,255,255),OtherBoxesColor=Color3.fromRGB(255,255,255),OtherBoxesColorTeam=Color3.fromRGB(0, 255, 0),BoxesOutlineColor=Color3.fromRGB(0,0,0),CornerEspThickness=1,CornerBoxes=false,
  Sleeping=false,SleepingColor=Color3.fromRGB(255,255,255),OtherSleepingColor=Color3.fromRGB(255,255,255),OtherSleepingColorTeam=Color3.fromRGB(0, 255, 0),
  Distances=false,DistanceColor=Color3.fromRGB(255,255,255),OtherDistanceColor=Color3.fromRGB(255,255,255),OtherDistanceColorTeam=Color3.fromRGB(0, 255, 0),
  Armour=false,ArmourColor=Color3.fromRGB(255,255,255),OtherArmourColor=Color3.fromRGB(255,255,255),OtherArmourColorTeam=Color3.fromRGB(0, 255, 0),
  Tool=false,ToolColor=Color3.fromRGB(255,255,255),OtherToolColor=Color3.fromRGB(255,255,255),OtherToolColorTeam=Color3.fromRGB(0, 255, 0),
  Tracer=false,TracerColor=Color3.fromRGB(255,255,255),OtherTracerColor=Color3.fromRGB(255,255,255),OtherTracerColorTeam=Color3.fromRGB(0, 255, 0),TracerThickness=1,TracerTransparrency=1,TracerFrom="Bottom",
  ViewAngle=false,ViewAngleColor=Color3.fromRGB(255,255,255),OtherViewAngleColor=Color3.fromRGB(255,255,255),OtherViewAngleColorTeam=Color3.fromRGB(0, 255, 0),ViewAngleThickness=1,ViewAngleTransparrency=1,
  HeadCircles=false,HeadCirclesColor=Color3.fromRGB(255,255,255),OtherHeadCirclesColor=Color3.fromRGB(255,255,255),OtherHeadCirclesTeam=Color3.fromRGB(0, 255, 0),HeadCirclesThickness=1,HeadCirclesTransparrency=1,HeadCirclesRadius=3,HeadCirclesFilled=false,
  HighlightTarget = false,HighlightTargetColor = Color3.fromRGB(255,0,0),
  TextFont=2,TextOutline=true,TextSize=12,RenderDistance=1000,TeamCheck=false,TargetSleepers=true,MinTextSize=11
},Drawings={},Connections={},Players={},Ores={},StorageThings={}}local Fonts = {["UI"]=0,["System"]=1,["Plex"]=2,["Monospace"]=3}
local Fov = {Settings={
  FovEnabled=true,
  FovColor=Color3.fromRGB(255,255,255),
  FovSize=90,
  FovFilled=false,
  FovTransparency=1,
  OutlineFovColor=Color3.fromRGB(0,0,0),
  RealFovSize=90,
  FovPosition="Screen",
  Snapline=true,
  SnaplineColor=Color3.fromRGB(255,255,255)
}}
local Combat = {Settings={
  SilentEnabled=true,
  SilentHitChance=100,
  SilentAimPart="Head",
  TeamCheck=true,
  SleeperCheck=true,
}}
local cache = {}

function Functions:GetClosest()
  local closest,PlayerDistance,playerTable = nil,Combat.Settings.RenderDistance,nil
  for _, v in pairs(game:GetService("Workspace"):GetChildren()) do 
    if v:FindFirstChild("HumanoidRootPart") and Combat.Settings.SleeperCheck == true and v.sleeping == nil then
      local Mouse = game.Players.LocalPlayer:GetMouse()
      local pos,OnScreen = Camera.WorldToViewportPoint(Camera, v:GetPivot().Position)
      local MouseMagnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)).Magnitude
      local PlayerDistance = (CharcaterMiddle:GetPivot().Position-v:GetPivot().Position).Magnitude
      if MouseMagnitude < Fov.Settings.FovSize and PlayerDistance <= Combat.Settings.RenderDistance and OnScreen == true then
        closest = v;PlayerDistance = PlayerDistance;playerTable=v
      end
    elseif v:FindFirstChild("HumanoidRootPart") and Combat.Settings.SleeperCheck == false then
      local Mouse = game.Players.LocalPlayer:GetMouse()
      local pos,OnScreen = Camera.WorldToViewportPoint(Camera, v:GetPivot().Position)
      local MouseMagnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)).Magnitude
      local PlayerDistance = (CharcaterMiddle:GetPivot().Position-v:GetPivot().Position).Magnitude
      if MouseMagnitude < Fov.Settings.FovSize and PlayerDistance <= Combat.Settings.RenderDistance and OnScreen == true then
        closest = v;PlayerDistance = PlayerDistance;playerTable=v
      end
    end
  end
  return closest,playerTable
end


function Functions:Draw(Type,Propities)
  if not Type and not Propities then return end
  local drawing = Drawing.new(Type)
  for i,v in pairs(Propities) do
    drawing[i] = v
  end
  table.insert(Esp.Drawings,drawing)
  return drawing
end


function Esp:CreateEsp(PlayerTable)
  if not PlayerTable then return end
  local drawings = {}
  drawings.BoxOutline = Functions:Draw("Square",{Thickness=2,Filled=false,Transparency=1,ZIndex = -1,Visible=false});
  drawings.Box = Functions:Draw("Square",{Thickness=1,Filled=false,Transparency=1,Color=Esp.Settings.BoxesColor,Color=Esp.Settings.OtherBoxesColor,Color=Esp.Settings.OtherBoxesColorTeam,ZIndex = 2,Visible=false});
  drawings.BoxFilled = Functions:Draw("Square",{Thickness=1,Filled=true,Transparency=Esp.Settings.BoxesFilledTransparency,Color=Esp.Settings.BoxesFilledColor,ZIndex = 2,Visible=false});
  drawings.Sleeping = Functions:Draw("Text",{Text = "Nil",Font=Esp.Settings.TextFont,Size=Esp.Settings.TextSize,Center=true,Outline=Esp.Settings.TextOutline,Color = Esp.Settings.SleepingColor,Color = Esp.Settings.OtherSleepingColor,Color = Esp.Settings.OtherSleepingColorTeam,ZIndex = 2,Visible=false})
  drawings.Distance = Functions:Draw("Text",{Text = "[nil]",Font=Esp.Settings.TextFont,Size=Esp.Settings.TextSize,Center=true,Outline=Esp.Settings.TextOutline,Color = Esp.Settings.DistanceColor,Color = Esp.Settings.OtherDistanceColor,Color = Esp.Settings.OtherDistanceColorTeam,ZIndex = 2,Visible=false})
  drawings.Armour = Functions:Draw("Text",{Text = "",Font=Esp.Settings.TextFont,Size=Esp.Settings.TextSize,Center=true,Outline=Esp.Settings.TextOutline,Color = Esp.Settings.ArmourColor,Color = Esp.Settings.OtherArmourColor,Color = Esp.Settings.OtherArmourColorTeam,ZIndex = 2,Visible=false})
  drawings.ViewAngle = Functions:Draw("Line",{Thickness=Esp.Settings.ViewAngleThickness,Transparency=Esp.Settings.ViewAngleTransparrency,Color=Esp.Settings.ViewAngleColor,Color=Esp.Settings.OtherViewAngleColor,Color=Esp.Settings.OtherViewAngleColorTeam,ZIndex=2,Visible=false})
  drawings.HeadCircles = Functions:Draw("Circle",{Thickness=Esp.Settings.HeadCirclesThickness,Transparency=Esp.Settings.HeadCirclesTransparrency,Color=Esp.Settings.HeadCirclesColor,Color=Esp.Settings.OtherHeadCirclesColor,Color=Esp.Settings.OtherHeadCirclesColorTeam,ZIndex=2,Visible=false})
  drawings.Tracer = Functions:Draw("Line",{Thickness=Esp.Settings.TracerThickness,Transparency=1,Color=Esp.Settings.TracerColor,Color=Esp.Settings.OtherTracerColor,Color=Esp.Settings.OtherTracerColorTeam,ZIndex=2,Visible=false})
  drawings.Line1 = Functions:Draw("Line",{Thickness=Esp.Settings.CornerEspThickness,Transparency=1,Color=Esp.Settings.BoxesColor,ZIndex=2,Visible=false});drawings.Line2 = Functions:Draw("Line",{Thickness=Esp.Settings.CornerEspThickness,Transparency=1,Color=Esp.Settings.BoxesColor,ZIndex=2,Visible=false});drawings.Line3 = Functions:Draw("Line",{Thickness=Esp.Settings.CornerEspThickness,Transparency=1,Color=Esp.Settings.BoxesColor,ZIndex=2,Visible=false});drawings.Line4 = Functions:Draw("Line",{Thickness=Esp.Settings.CornerEspThickness,Transparency=1,Color=Esp.Settings.BoxesColor,ZIndex=2,Visible=false});drawings.Line5 = Functions:Draw("Line",{Thickness=Esp.Settings.CornerEspThickness,Transparency=1,Color=Esp.Settings.BoxesColor,ZIndex=2,Visible=false});drawings.Line6 = Functions:Draw("Line",{Thickness=Esp.Settings.CornerEspThickness,Transparency=1,Color=Esp.Settings.BoxesColor,ZIndex=2,Visible=false});drawings.Line7 = Functions:Draw("Line",{Thickness=Esp.Settings.CornerEspThickness,Transparency=1,Color=Esp.Settings.BoxesColor,ZIndex=2,Visible=false});drawings.Line8 = Functions:Draw("Line",{Thickness=Esp.Settings.CornerEspThickness,Transparency=1,Color=Esp.Settings.BoxesColor,ZIndex=2,Visible=false})
  drawings.PlayerTable = PlayerTable
  Esp.Players[PlayerTable] = drawings
end

function Esp:RemoveEsp(PlayerTable)
  if not PlayerTable and PlayerTable ~= nil then return end
  esp = Esp.Players[PlayerTable];
  if not esp then return end
  for i, v in pairs(esp) do
    if not type(v) == "table" then
      v:Remove();
    end
  end
  Esp.Players[PlayerTable] = nil;
end
function Esp:UpdateEsp()
  for i,v in pairs(Esp.Players) do
    local Character = i
    local Position,OnScreen = Camera:WorldToViewportPoint(Character:GetPivot().Position);
    local scale = 1 / (Position.Z * math.tan(math.rad(Camera.FieldOfView * 0.5)) * 2) * 100;
    local w,h = math.floor(40 * scale), math.floor(55 * scale);
    local x,y = math.floor(Position.X), math.floor(Position.Y);
    local Distance = (CharcaterMiddle:GetPivot().Position-Character:GetPivot().Position).Magnitude
    local BoxPosX,BoxPosY = math.floor(x - w * 0.5),math.floor(y - h * 0.5)
    local offsetCFrame = CFrame.new(0, 0, -4)
    local IsVisible = false
    if Character and Character:FindFirstChild("HumanoidRootPart") and Character:FindFirstChild("Head") and Character.Parent == game.Workspace then
      local TeamTag = Character.Head.Teamtag.Enabled
      local ccc,ttt = Functions:GetClosest()
      if OnScreen == true and Esp.Settings.Boxes == true and Distance <= Esp.Settings.RenderDistance then
        if Esp.Settings.TeamCheck == true and TeamTag == false then
          v.BoxOutline.Visible = Esp.Settings.BoxesOutline;v.Box.Visible = true;v.BoxFilled.Visible=Esp.Settings.BoxesFilled
        elseif Esp.Settings.TeamCheck == true and TeamTag == true then
          v.BoxOutline.Visible = false;v.Box.Visible = false;v.BoxFilled.Visible=false
        else
          v.BoxOutline.Visible = Esp.Settings.BoxesOutline;v.Box.Visible = true;v.BoxFilled.Visible=Esp.Settings.BoxesFilled
        end
        if Esp.Settings.TargetSleepers == true and v.PlayerTable.sleeping == true then
          v.BoxOutline.Visible = false;v.Box.Visible = false;v.BoxFilled.Visible = false
        end
        v.BoxOutline.Position = Vector2.new(BoxPosX,BoxPosY);v.BoxOutline.Size = Vector2.new(w,h)
        v.Box.Position = Vector2.new(BoxPosX,BoxPosY);v.Box.Size = Vector2.new(w,h)
        v.Box.Color = Esp.Settings.BoxesColor;v.BoxOutline.Color = Color3.fromRGB(0, 0, 0)
        v.BoxOutline.Transparency = 1
        v.BoxFilled.Position=Vector2.new(BoxPosX,BoxPosY);v.BoxFilled.Size=Vector2.new(w,h)
        v.BoxFilled.Transparency = Esp.Settings.BoxesFilledTransparency
        v.BoxFilled.Color = Esp.Settings.BoxesFilledColor
        if IsVisible == true then
          v.Box.Color = Color3.fromRGB(255,0,0);v.BoxOutline.Color=Esp.Settings.BoxesOutlineColor;v.BoxFilled.Color=Color3.fromRGB(0,0,0)
        else
          v.Box.Color = Esp.Settings.BoxesColor;v.BoxOutline.Color = Esp.Settings.BoxesOutlineColor;v.BoxFilled.Color=Esp.Settings.BoxesFilledColor
        end
        if Esp.Settings.HighlightTarget and Character == ccc then
          v.Box.Color = Esp.Settings.HighlightTargetColor
        else
          v.Box.Color = Esp.Settings.BoxesColor;
        end
        if v.PlayerTable.sleeping == true then v.Box.Color = Esp.Settings.OtherBoxesColor end
        if TeamTag == true then v.Sleeping.Text = "Friendly" end
        if TeamTag == true then v.Box.Color = Esp.Settings.OtherBoxesColorTeam end
      else
        v.BoxOutline.Visible = false;v.Box.Visible = false;v.BoxFilled.Visible = false;
      end
      if OnScreen == true and Esp.Settings.CornerBoxes == true and Distance <= Esp.Settings.RenderDistance then
        if Esp.Settings.TeamCheck == true and TeamTag == false then
          v.BoxFilled.Visible=Esp.Settings.BoxesFilled
          v.Line1.Visible=Esp.Settings.CornerBoxes;v.Line2.Visible=Esp.Settings.CornerBoxes;v.Line3.Visible=Esp.Settings.CornerBoxes;v.Line4.Visible=Esp.Settings.CornerBoxes;v.Line5.Visible=Esp.Settings.CornerBoxes;v.Line6.Visible=Esp.Settings.CornerBoxes;v.Line7.Visible=Esp.Settings.CornerBoxes;v.Line8.Visible=Esp.Settings.CornerBoxes
        elseif Esp.Settings.TeamCheck == true and TeamTag == true then
          v.Line1.Visible=false;v.Line2.Visible=false;v.Line3.Visible=false;v.Line4.Visible=false;v.Line5.Visible=false;v.Line6.Visible=false;v.Line7.Visible=false;v.Line8.Visible=false
          v.BoxFilled.Visible=false
        else
          v.BoxFilled.Visible=Esp.Settings.BoxesFilled
          v.Line1.Visible=Esp.Settings.CornerBoxes;v.Line2.Visible=Esp.Settings.CornerBoxes;v.Line3.Visible=Esp.Settings.CornerBoxes;v.Line4.Visible=Esp.Settings.CornerBoxes;v.Line5.Visible=Esp.Settings.CornerBoxes;v.Line6.Visible=Esp.Settings.CornerBoxes;v.Line7.Visible=Esp.Settings.CornerBoxes;v.Line8.Visible=Esp.Settings.CornerBoxes
        end
        if Esp.Settings.TargetSleepers == true and v.PlayerTable.sleeping == true then
          v.Line1.Visible=false;v.Line2.Visible=false;v.Line3.Visible=false;v.Line4.Visible=false;v.Line5.Visible=false;v.Line6.Visible=false;v.Line7.Visible=false;v.Line8.Visible=false
          v.BoxFilled.Visible = false
        end
        v.Line1.From=Vector2.new(BoxPosX,BoxPosY);v.Line1.To=Vector2.new((BoxPosX+w/4),BoxPosY) --Top Left Top
        v.Line2.From=Vector2.new(BoxPosX+w,BoxPosY);v.Line2.To=Vector2.new((BoxPosX+w)-w/4,BoxPosY) -- Top Right Top
        v.Line3.From=Vector2.new(BoxPosX,BoxPosY+h);v.Line3.To=Vector2.new((BoxPosX+w/4),BoxPosY+h) -- Bottom Left Bottom
        v.Line4.From=Vector2.new(BoxPosX+w,BoxPosY+h);v.Line4.To=Vector2.new((BoxPosX+w)-w/4,BoxPosY+h) --Bottom Right Bottom
        v.Line5.From=Vector2.new(BoxPosX,BoxPosY);v.Line5.To=Vector2.new(BoxPosX,BoxPosY+h/8) --Top Left Down
        v.Line6.From=Vector2.new(BoxPosX,BoxPosY+h);v.Line6.To=Vector2.new(BoxPosX,(BoxPosY+h)-h/8) --Bottom Left Up
        v.Line7.From=Vector2.new(BoxPosX+w,BoxPosY+h);v.Line7.To=Vector2.new(BoxPosX+w,(BoxPosY+h)-h/8) --Bottom Right Up
        v.Line8.From=Vector2.new(BoxPosX+w,BoxPosY);v.Line8.To=Vector2.new(BoxPosX+w,BoxPosY+h/8) --Top Right Down
        v.BoxFilled.Position=Vector2.new(BoxPosX,BoxPosY);v.BoxFilled.Size=Vector2.new(w,h)
        v.BoxFilled.Transparency = Esp.Settings.BoxesFilledTransparency
        if IsVisible == true then
          v.Line1.Color=Color3.fromRGB(255,0,0);v.Line2.Color=Color3.fromRGB(255,0,0);v.Line3.Color=Color3.fromRGB(255,0,0);v.Line4.Color=Color3.fromRGB(255,0,0);v.Line5.Color=Color3.fromRGB(255,0,0);v.Line6.Color=Color3.fromRGB(255,0,0);v.Line7.Color=Color3.fromRGB(255,0,0);v.Line8.Color=Color3.fromRGB(255,0,0)
          v.BoxFilled.Color=Color3.fromRGB(255,0,0)
        else
          v.Line1.Color=Esp.Settings.BoxesColor;v.Line2.Color=Esp.Settings.BoxesColor;v.Line3.Color=Esp.Settings.BoxesColor;v.Line4.Color=Esp.Settings.BoxesColor;v.Line5.Color=Esp.Settings.BoxesColor;v.Line6.Color=Esp.Settings.BoxesColor;v.Line7.Color=Esp.Settings.BoxesColor;v.Line8.Color=Esp.Settings.BoxesColor
          v.BoxFilled.Color=Esp.Settings.BoxesFilledColor
        end
        if Esp.Settings.HighlightTarget and Character == ccc then
          v.Line1.Color = Esp.Settings.HighlightTargetColor
          v.Line2.Color = Esp.Settings.HighlightTargetColor
          v.Line3.Color = Esp.Settings.HighlightTargetColor
          v.Line4.Color = Esp.Settings.HighlightTargetColor
          v.Line5.Color = Esp.Settings.HighlightTargetColor
          v.Line6.Color = Esp.Settings.HighlightTargetColor
          v.Line7.Color = Esp.Settings.HighlightTargetColor
          v.Line8.Color = Esp.Settings.HighlightTargetColor
        else
          v.Line1.Color = Esp.Settings.BoxesColor
          v.Line2.Color = Esp.Settings.BoxesColor
          v.Line3.Color = Esp.Settings.BoxesColor
          v.Line4.Color = Esp.Settings.BoxesColor
          v.Line5.Color = Esp.Settings.BoxesColor
          v.Line6.Color = Esp.Settings.BoxesColor
          v.Line7.Color = Esp.Settings.BoxesColor
          v.Line8.Color = Esp.Settings.BoxesColor
        end
        if v.PlayerTable.sleeping == true then
          v.Line1.Color = Esp.Settings.OtherBoxesColor;v.Line2.Color = Esp.Settings.OtherBoxesColor;v.Line3.Color = Esp.Settings.OtherBoxesColor;v.Line4.Color = Esp.Settings.OtherBoxesColor;v.Line5.Color = Esp.Settings.OtherBoxesColor;v.Line6.Color = Esp.Settings.OtherBoxesColor;v.Line7.Color = Esp.Settings.OtherBoxesColor;v.Line8.Color = Esp.Settings.OtherBoxesColor
        end
        if TeamTag == true then
          v.Line1.Color = Esp.Settings.OtherBoxesColorTeam;v.Line2.Color = Esp.Settings.OtherBoxesColorTeam;v.Line3.Color = Esp.Settings.OtherBoxesColorTeam;v.Line4.Color = Esp.Settings.OtherBoxesColorTeam;v.Line5.Color = Esp.Settings.OtherBoxesColorTeam;v.Line6.Color = Esp.Settings.OtherBoxesColorTeam;v.Line7.Color = Esp.Settings.OtherBoxesColorTeam;v.Line8.Color = Esp.Settings.OtherBoxesColorTeam
        end
      else
        v.Line1.Visible=false;v.Line2.Visible=false;v.Line3.Visible=false;v.Line4.Visible=false;v.Line5.Visible=false;v.Line6.Visible=false;v.Line7.Visible=false;v.Line8.Visible=false;v.BoxFilled.Visible = false
      end
      if OnScreen == true and Esp.Settings.Sleeping == true and Distance <= Esp.Settings.RenderDistance then
        if Character.Head.Nametag.tag.Text ~= "" then
          v.Sleeping.Text = Character:FindFirstChild("Head").Nametag.tag.Text
        else
          v.Sleeping.Text = "Enemy"
          if TeamTag == true then v.Sleeping.Text = "Friendly" end
          if v.PlayerTable.sleeping == true then v.Sleeping.Text = "Sleeping" end
        end
        if Esp.Settings.TeamCheck == true and TeamTag == false then  v.Sleeping.Visible = true elseif Esp.Settings.TeamCheck == true and TeamTag == true then v.Sleeping.Visible = false else v.Sleeping.Visible = true end
        if Esp.Settings.TargetSleepers == true and v.PlayerTable.sleeping == true then v.Sleeping.Visible = false end
        v.Sleeping.Outline=Esp.Settings.TextOutline;v.Sleeping.Color=Esp.Settings.SleepingColor;v.Sleeping.Size=math.max(math.min(math.abs(Esp.Settings.TextSize*scale),Esp.Settings.TextSize),Esp.Settings.MinTextSize);v.Sleeping.Color = Esp.Settings.SleepingColor;v.Sleeping.Font=Esp.Settings.TextFont;v.Sleeping.Position = Vector2.new(x,math.floor(y-h*0.5-v.Sleeping.TextBounds.Y))
        if Esp.Settings.HighlightTarget and Character == ccc then
          v.Sleeping.Color = Esp.Settings.HighlightTargetColor
        else
          v.Sleeping.Color = Esp.Settings.SleepingColor;
        end
        if v.PlayerTable.sleeping == true then v.Sleeping.Color = Esp.Settings.OtherSleepingColor end
        if TeamTag == true then v.Sleeping.Color = Esp.Settings.OtherSleepingColorTeam end
      else
        v.Sleeping.Visible=false
      end
      if OnScreen == true and Esp.Settings.Distances == true and Distance <= Esp.Settings.RenderDistance then
        if Esp.Settings.TeamCheck == true and TeamTag == false then v.Distance.Visible = true elseif Esp.Settings.TeamCheck == true and TeamTag == true then v.Distance.Visible = false else v.Distance.Visible = true end
        if Esp.Settings.TargetSleepers == true and v.PlayerTable.sleeping == true then v.Distance.Visible = false end
        v.Distance.Outline=Esp.Settings.TextOutline;v.Distance.Size = math.max(math.min(math.abs(Esp.Settings.TextSize*scale),Esp.Settings.TextSize),Esp.Settings.MinTextSize);v.Distance.Position=Vector2.new(x,math.floor(y+h*0.5));v.Distance.Color = Esp.Settings.DistanceColor;v.Distance.Text = tostring("["..math.floor(Distance)).."]";v.Distance.Font=Esp.Settings.TextFont
        if Esp.Settings.HighlightTarget and Character == ccc then
          v.Distance.Color = Esp.Settings.HighlightTargetColor
        else
          v.Distance.Color = Esp.Settings.DistanceColor;
        end
        if v.PlayerTable.sleeping == true then v.Distance.Color = Esp.Settings.OtherDistanceColor end
        if TeamTag == true then v.Distance.Color = Esp.Settings.OtherDistanceColorTeam end
      else
        v.Distance.Visible = false
      end
      if OnScreen == true and Esp.Settings.Tool == true and Distance <= Esp.Settings.RenderDistance then
        if Esp.Settings.TeamCheck == true and TeamTag == false then v.Tool.Visible = true elseif Esp.Settings.TeamCheck == true and TeamTag == true then v.Tool.Visible = false else v.Tool.Visible = true end
        if Esp.Settings.TargetSleepers == true and v.PlayerTable.sleeping == true then v.Tool.Visible = false end
        if Esp.Settings.Tool == true then v.Tool.Position=Vector2.new(x, math.floor(y+h*0.5)+v.Tool.TextBounds.Y) else v.Tool.Position=Vector2.new(x,math.floor(y+h*0.5)); end
        v.Tool.Text=Esp:CheckTools(v.PlayerTable);v.Tool.Outline=Esp.Settings.TextOutline;v.Tool.Size=math.max(math.min(math.abs(Esp.Settings.TextSize*scale),Esp.Settings.TextSize),Esp.Settings.MinTextSize);v.Tool.Color=Esp.Settings.ToolColor;v.Tool.Font=Esp.Settings.TextFont
        if Esp.Settings.HighlightTarget and Character == ccc then
          v.Tool.Color = Esp.Settings.HighlightTargetColor
        else
          v.Tool.Color = Esp.Settings.ToolColor;
        end
        if v.PlayerTable.sleeping == true then v.Tool.Color = Esp.Settings.OtherToolColor end
        if TeamTag == true then v.Tool.Color = Esp.Settings.OtherToolColorTeam end
      else
        v.Tool.Visible = false
      end
      local armorFolder = Character.Armor:FindFirstChildOfClass("Folder")
      if OnScreen == true and Esp.Settings.Armour == true and Distance <= Esp.Settings.RenderDistance and armorFolder then
        local armorName = armorFolder.Name
        if armorName == "WoodHelmet" or armorName == "WoodChestplate" or armorName == "WoodLeggings" then
          v.Armour.Text = "Wood Gear"
        elseif armorName == "RiotHelmet" or armorName == "RiotChestplate" or armorName == "RiotLeggings" then
          v.Armour.Text = "Riot Gear"
        elseif armorName == "IronHelmet" or armorName == "IronChestplate" or armorName == "IronLeggings" then
          v.Armour.Text = "Iron Gear"
        elseif armorName == "SteelHelmet" or armorName == "SteelChestplate" or armorName == "SteelLeggings" then
          v.Armour.Text = "Steel Gear"
        else
          v.Armour.Text = ""
        end
        if Esp.Settings.TeamCheck == true and TeamTag == false then v.Armour.Visible = true elseif Esp.Settings.TeamCheck == true and TeamTag == true then v.Armour.Visible = false else v.Armour.Visible = true end
        if Esp.Settings.TargetSleepers == true and v.PlayerTable.sleeping == true then v.Armour.Visible = false end
        v.Armour.Outline=Esp.Settings.TextOutline;v.Armour.Size = math.max(math.min(math.abs(Esp.Settings.TextSize*scale),Esp.Settings.TextSize),Esp.Settings.MinTextSize);v.Armour.Position=Vector2.new(math.floor(BoxPosX+w+v.Armour.TextBounds.X*1.30*0.5),BoxPosY+v.Armour.TextBounds.Y*1.85*0.5-((v.Armour.TextBounds.Y*2)*0.5));v.Armour.Color = Esp.Settings.ArmourColor;v.Armour.Font=Esp.Settings.TextFont
        v.Armour.Color = Esp.Settings.HighlightTargetColor
        if Esp.Settings.HighlightTarget and Character == ccc then
          v.Armour.Color = Esp.Settings.HighlightTargetColor
        else
          v.Armour.Color = Esp.Settings.ArmourColor;
        end
        if v.PlayerTable.sleeping == true then v.Armour.Color = Esp.Settings.OtherArmourColor end
        if TeamTag == true then v.Armour.Color = Esp.Settings.OtherArmourColorTeam end
      else
        v.Armour.Visible = false;
      end
      if OnScreen == true and Esp.Settings.Tracer == true and Distance <= Esp.Settings.RenderDistance then
        if Esp.Settings.TeamCheck == true and TeamTag == false then v.Tracer.Visible = true elseif Esp.Settings.TeamCheck == true and TeamTag == true then v.Tracer.Visible = false else v.Tracer.Visible = true end
        if Esp.Settings.TargetSleepers == true and v.PlayerTable.sleeping == true then v.Tracer.Visible = false end
        v.Tracer.Color = Esp.Settings.TracerColor;v.Tracer.Thickness=Esp.Settings.TracerThickness;v.Transparency=Esp.Settings.TracerTransparrency;
        if Esp.Settings.TracerFrom == "Bottom" then
          v.Tracer.From = Vector2.new(Camera.ViewportSize.X/2,Camera.ViewportSize.Y)
          v.Tracer.To = Vector2.new(x,y+h*0.5)
        elseif Esp.Settings.TracerFrom == "Middle" then
          v.Tracer.From = Vector2.new(Camera.ViewportSize.X/2,Camera.ViewportSize.Y/2)
          v.Tracer.To = Vector2.new(x,y)
        elseif Esp.Settings.TracerFrom == "Top" then
          v.Tracer.From = Vector2.new(Camera.ViewportSize.X / 2, 0)
          v.Tracer.To = Vector2.new(x,y-h*0.5)
        else
          v.Tracer.From = Vector2.new(Camera.ViewportSize.X/2,Camera.ViewportSize.Y/Camera.ViewportSize.Y)
          if Esp.Settings.Sleeping == true then
            v.Tracer.To = Vector2.new(x,(y-h)-v.Sleeping.TextBounds.Y*0.5)
          else
            v.Tracer.From = Vector2.new(Camera.ViewportSize.X/2,Camera.ViewportSize.Y)
            v.Tracer.To = Vector2.new(x,y-h*0.5)
          end
        end
        if Esp.Settings.HighlightTarget and Character == ccc then
          v.Tracer.Color = Esp.Settings.HighlightTargetColor
        else
          v.Tracer.Color = Esp.Settings.TracerColor;
        end
        if v.PlayerTable.sleeping == true then v.Tracer.Color = Esp.Settings.OtherTracerColor end
        if TeamTag == true then v.Tracer.Color = Esp.Settings.OtherTracerColorTeam end
      else
        v.Tracer.Visible = false
      end
      if OnScreen == true and Esp.Settings.ViewAngle == true and Distance <= Esp.Settings.RenderDistance then
        if Esp.Settings.TeamCheck == true and TeamTag == false then v.ViewAngle.Visible = true elseif Esp.Settings.TeamCheck == true and TeamTag == true then v.ViewAngle.Visible = false else v.ViewAngle.Visible = true end
        if Esp.Settings.TargetSleepers == true and v.PlayerTable.sleeping == true then v.ViewAngle.Visible = false end
        v.ViewAngle.Color = Esp.Settings.ViewAngleColor;v.ViewAngle.Thickness=Esp.Settings.ViewAngleThickness;v.Transparency=Esp.Settings.ViewAngleTransparrency;
        local headpos = Camera:WorldToViewportPoint(Character.Head.Position)
        local offsetCFrame = CFrame.new(0, 0, -4)
        v.ViewAngle.From = Vector2.new(headpos.X, headpos.Y)
        local value = math.clamp(1/Distance*100, 0.1, 1)
        local dir = Character.Head.CFrame:ToWorldSpace(offsetCFrame)
        offsetCFrame = offsetCFrame * CFrame.new(0, 0, 0.4)
        local dirpos = Camera:WorldToViewportPoint(Vector3.new(dir.X, dir.Y, dir.Z))
        if OnScreen == true then
          v.ViewAngle.To = Vector2.new(dirpos.X, dirpos.Y)
          offsetCFrame = CFrame.new(0, 0, -4)
        end
        if Esp.Settings.HighlightTarget and Character == ccc then
          v.ViewAngle.Color = Esp.Settings.HighlightTargetColor
        else
          v.ViewAngle.Color = Esp.Settings.ViewAngleColor;
        end
        if v.PlayerTable.sleeping == true then v.ViewAngle.Color = Esp.Settings.OtherViewAngleColor end
        if TeamTag == true then v.ViewAngle.Color = Esp.Settings.OtherViewAngleColorTeam end
      else
        v.ViewAngle.Visible = false
      end
      if OnScreen == true and Esp.Settings.HeadCircles == true and Distance <= Esp.Settings.RenderDistance then
        if Esp.Settings.TeamCheck == true and TeamTag == false then v.HeadCircles.Visible = true elseif Esp.Settings.TeamCheck == true and TeamTag == true then v.HeadCircles.Visible = false else v.HeadCircles.Visible = true end
        if Esp.Settings.TargetSleepers == true and v.PlayerTable.sleeping == true then v.HeadCircles.Visible = false end
        v.HeadCircles.Color = Esp.Settings.HeadCirclesColor;v.HeadCircles.Thickness=Esp.Settings.HeadCirclesThickness;v.Transparency=Esp.Settings.HeadCirclesTransparrency;
        local headpos = Camera:WorldToViewportPoint(Character.Head.Position)
        local Position,OnScreen = Camera:WorldToViewportPoint(Character:FindFirstChild("HumanoidRootPart").Position);
        if OnScreen == true then
          v.HeadCircles.Position = Vector2.new(headpos.X, headpos.Y)
          v.HeadCircles.Radius = 3
          v.HeadCircles.NumSides = 18
        end
        if Esp.Settings.HighlightTarget and Character == ccc then
          v.HeadCircles.Color = Esp.Settings.HighlightTargetColor
        else
          v.HeadCircles.Color = Esp.Settings.HeadCirclesColor;
        end
        if v.PlayerTable.sleeping == true then v.HeadCircles.Color = Esp.Settings.OtherHeadCirclesColor end
        if TeamTag == true then v.HeadCircles.Color = Esp.Settings.OtherHeadCirclesColorTeam end
      else
        v.HeadCircles.Visible = false
      end
    else
      v.Box.Visible=false;
      v.BoxOutline.Visible=false;
      v.BoxFilled.Visible=false;
      v.Tool.Visible=false;
      v.Armour.Visible=false;
      v.Distance.Visible=false;
      v.Sleeping.Visible=false;
      v.ViewAngle.Visible=false;
      v.HeadCircles.Visible=false;
      v.Tracer.Visible=false;
      v.Line1.Visible=false;v.Line2.Visible=false;v.Line3.Visible=false;v.Line4.Visible=false;v.Line5.Visible=false;v.Line6.Visible=false;v.Line7.Visible=false;v.Line8.Visible=false
    end
  end
end
local PlayerConnection = PlayerUpdater:Connect(function()
Esp:UpdateEsp()
end)
for _, i in pairs(game:GetService("Workspace"):GetChildren()) do
  if i ~= game.Players.LocalPlayer.Character and i:FindFirstChild("HumanoidRootPart") and i:FindFirstChild("Head") then
      Esp:CreateEsp(i)
  end
end

game.Workspace.DescendantAdded:Connect(function(i)
  if i ~= game.Players.LocalPlayer.Character and i:FindFirstChild("HumanoidRootPart") and i:FindFirstChild("Head") then
      Esp:CreateEsp(i)
  end
end)   



local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Library.lua'))()
local SaveManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/addons/SaveManager.lua'))()
local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Theme.lua'))()
local Build = "Private";local Color = "#FF0000";local Ver = "v0.3b"
local Window = Library:CreateWindow({ Size = UDim2.fromOffset(550, 610),Title = "Ethernality.<font color=\"#d17bff\">wtf</font> | ".."<font color=\""..Color.."\">"..Build.."</font>".."                      ["..Ver.."]",Center = true,AutoShow = true})

local Tabs = {
  CombatTab = Window:AddTab('Combat'),
  VisualsTab = Window:AddTab('Visuals'),
  MiscellaneousTab = Window:AddTab('Miscellaneous'),
  WorldTab = Window:AddTab('World'),
  LocalTab = Window:AddTab('Local'),
  UISettings = Window:AddTab('Settings')
}

local HitboxTabBox = Tabs.CombatTab:AddLeftTabbox()
local CrosshairTabBox = Tabs.MiscellaneousTab:AddLeftTabbox()
local HeadHitbox = HitboxTabBox:AddTab('Head Hitbox')

local HedsOn = Instance.new("Part")
HedsOn.Name = "HedsOn"
HedsOn.Anchored = false
HedsOn.CanCollide = false
HedsOn.Transparency = 0
HedsOn.Size = Vector3.new(5, 5, 10)
HedsOn.Parent = game.ReplicatedStorage

local HeadExtends = false
local XSize = 5
local YSize = 5
local ZSize = 10
local HitboxTransparency = 50

HeadHitbox:AddToggle('HBO',{Text='Enabled',Default=false}):OnChanged(function(Value)
HeadExtends = Value
end)

HeadHitbox:AddSlider('HitboxXSize_Slider', {Text = 'Width', Default = 5, Min = 0, Max = 10, Rounding = 2, Suffix = "%", Compact = false}):OnChanged(function(HitboxXSize)
XSize = HitboxXSize
end)

HeadHitbox:AddSlider('HitboxYSize_Slider', {Text = 'Height', Default = 5, Min = 0, Max = 10, Rounding = 2, Suffix = "%", Compact = false}):OnChanged(function(HitboxYSize)
YSize = HitboxYSize
end)

HeadHitbox:AddSlider('HitboxXSize_Slider', {Text = 'Transparency', Default = 50, Min = 0, Max = 100, Rounding = 0, Suffix = "%", Compact = false}):OnChanged(function(TransparencyValue)
HitboxTransparency = TransparencyValue / 100
end)

task.spawn(function()
while task.wait() do
  if HeadExtends then
    for _, i in ipairs(game:GetService("Workspace"):GetChildren()) do
      if i:FindFirstChild("HumanoidRootPart") and not i:FindFirstChild("HedsOn") then
        local BigHeadsPart = Instance.new("Part")
        BigHeadsPart.Name = "Head"
        BigHeadsPart.Anchored = false
        BigHeadsPart.CanCollide = false
        BigHeadsPart.Transparency = HitboxTransparency
        BigHeadsPart.Size = Vector3.new(XSize, YSize, ZSize)
        local DeletePart = Instance.new("Weld")
        DeletePart.Parent = BigHeadsPart
        DeletePart.Name = "FAKEHEAD"
        local HeadsParts = BigHeadsPart:Clone()
        HeadsParts.Parent = i
        HeadsParts.Orientation = i.HumanoidRootPart.Orientation
        local clonedHedsOn = HedsOn:Clone()
        clonedHedsOn.Parent = i
        local Headswelding = Instance.new("Weld")
        Headswelding.Parent = HeadsParts
        Headswelding.Part0 = i.HumanoidRootPart
        Headswelding.Part1 = HeadsParts
        HeadsParts.Position = Vector3.new(i.HumanoidRootPart.Position.X, i.HumanoidRootPart.Position.Y - 0.6, i.HumanoidRootPart.Position.Z)
      end
    end
  else
    for _, i in ipairs(game:GetService("Workspace"):GetChildren()) do
      if i:FindFirstChild("HumanoidRootPart") and i:FindFirstChild("HedsOn") then
        i.HedsOn:Remove()
        for _, a in ipairs(i:GetChildren()) do
          if a.Name == "Head" and a:FindFirstChild("FAKEHEAD") and (not a:FindFirstChild("Nametag") or not a:FindFirstChild("Face")) then
            a:Remove()
          end
        end
      end
    end
  end
end
end)



local PlayerVisualTabbox = Tabs.VisualsTab:AddLeftTabbox()
local PlayerVisualTab = PlayerVisualTabbox:AddTab('player visuals')
local PlayerSettingsTab = PlayerVisualTabbox:AddTab('player settings')

--* Player ESP *--

PlayerVisualTab:AddToggle('EnabledToggle',{Text='enabled',Default=false}):OnChanged(function()
end)

PlayerVisualTab:AddSlider('RenderDistance', {Text='distance:',Default=1000,Min=0,Max=2500,Rounding=0,Compact=false,Suffix=" studs"}):OnChanged(function(Value)
Esp.Settings.RenderDistance = Value
end)

--> Onscreen Text
local CustomText = Drawing.new("Text")
CustomText.Visible = false
CustomText.Text = "ethernality.wtf"
CustomText.Size = 12
CustomText.Outline = true
CustomText.Center = true
CustomText.Font = 2
CustomText.Color = Color3.new(208, 123, 255)
CustomText.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 1.89)
--
PlayerVisualTab:AddToggle('12t2ta22', {Text = 'onscreen',Default = false,Tooltip = 'Onscreen Information',}):AddColorPicker('OnscreenColor', {Default = Color3.fromRGB(208, 123, 255),Title = 'Color',}):OnChanged(function(ONSCREENVALUE)
CustomText.Visible = ONSCREENVALUE
end)
Options.OnscreenColor:OnChanged(function(Color320)
CustomText.Color = Color320
end)

local fadingIn, transparency, FADE_SPEED = true, 0, 0.008
local function updateTransparency()
  CustomText.Transparency = transparency
  transparency = transparency + (fadingIn and FADE_SPEED or -FADE_SPEED)
  if fadingIn and transparency >= 1 then
    fadingIn = false
  elseif not fadingIn and transparency <= 0 then
    fadingIn = true
  end
end
game:GetService("RunService").Heartbeat:Connect(updateTransparency)

PlayerVisualTab:AddToggle('Sleeping',{Text='names',Default=false}):AddColorPicker('SleepingColor',{Default=Color3.fromRGB(208, 123, 255),Title='Color'})
Options.SleepingColor:OnChanged(function(Value)
Esp.Settings.SleepingColor = Value
end)
Toggles.Sleeping:OnChanged(function(Value)
Esp.Settings.Sleeping = Value
end)

PlayerVisualTab:AddToggle('',{Text='boxes',Default=false}):AddColorPicker('BoxesColor',{Default=Color3.fromRGB(208, 123, 255),Title='Color'}):AddColorPicker('BoxesFilledColor',{Default=Color3.fromRGB(0, 0, 0),Title='Color'})
Options.BoxesColor:OnChanged(function(Value)
Esp.Settings.BoxesColor = Value
end)
Options.BoxesFilledColor:OnChanged(function(Value)
Esp.Settings.BoxesFilledColor = Value
end)
PlayerVisualTab:AddDropdown('',{Values={"none","full","corners"},Default=1,Multi=false,Text='type:'}):OnChanged(function(Value)
if Value == "none" then
  Esp.Settings.Boxes = false
  Esp.Settings.CornerBoxes = false
elseif Value == "full" then
  Esp.Settings.CornerBoxes = false
  Esp.Settings.Boxes = true
elseif Value == "corners" then
  Esp.Settings.Boxes = false
  Esp.Settings.CornerBoxes = true
end
end)

PlayerVisualTab:AddSlider('BoxTransparencySlider', {Text = 'transparency', Default = 0.25, Min = 0, Max = 1, Rounding = 2, Suffix = "%", Compact = false}):OnChanged(function(BoxTransparencyValue)
Esp.Settings.BoxesFilledTransparency = BoxTransparencyValue
end)

PlayerVisualTab:AddToggle('Distances',{Text='distance',Default=false}):AddColorPicker('DistancesColor',{Default=Color3.fromRGB(208, 123, 255),Title='Color'})
Toggles.Distances:OnChanged(function(Value)
Esp.Settings.Distances = Value
end)
Options.DistancesColor:OnChanged(function(Value)
Esp.Settings.DistanceColor = Value
end)

PlayerVisualTab:AddToggle('Tool',{Text='weapon',Default=false}):AddColorPicker('ToolColor',{Default=Color3.fromRGB(208, 123, 255),Title='Color'})
Options.ToolColor:OnChanged(function(Value)
Esp.Settings.ToolColor = Value
end)
Toggles.Tool:OnChanged(function(Value)
Esp.Settings.Tool = Value
end)

PlayerVisualTab:AddToggle('Armour',{Text='armour',Default=false}):AddColorPicker('ArmourColor',{Default=Color3.fromRGB(208, 123, 255),Title='Color'})
Options.ArmourColor:OnChanged(function(Value)
Esp.Settings.ArmourColor = Value
end)
Toggles.Armour:OnChanged(function(Value)
Esp.Settings.Armour = Value
end)

PlayerVisualTab:AddToggle('ViewAngle',{Text='view angle',Default=false}):AddColorPicker('ViewAngleColor',{Default=Color3.fromRGB(208, 123, 255),Title='Color'})
Toggles.ViewAngle:OnChanged(function(Value)
Esp.Settings.ViewAngle = Value
end)
Options.ViewAngleColor:OnChanged(function(Value)
Esp.Settings.ViewAngleColor = Value
end)

PlayerVisualTab:AddToggle('HeadCircles',{Text='head circles',Default=false}):AddColorPicker('HeadCirclesColor',{Default=Color3.fromRGB(208, 123, 255),Title='Color'})
Toggles.HeadCircles:OnChanged(function(Value)
Esp.Settings.HeadCircles = Value
end)
Options.HeadCirclesColor:OnChanged(function(Value)
Esp.Settings.HeadCirclesColor = Value
end)

PlayerVisualTab:AddToggle('Tracer',{Text='tracer',Default=false}):AddColorPicker('TracerColor',{Default=Color3.fromRGB(208, 123, 255),Title='Color'})
Toggles.Tracer:OnChanged(function(Value)
Esp.Settings.Tracer = Value
end)
Options.TracerColor:OnChanged(function(Value)
Esp.Settings.TracerColor = Value
end)

PlayerVisualTab:AddDropdown('TracerPosition',{Values={"Bottom","Middle","Top"},Default=1,Multi=false,Text='tracer position:'}):OnChanged(function(Value)
Esp.Settings.TracerFrom = Value
end)


local CrosshairTab = CrosshairTabBox:AddTab('Crosshair X')
local CrossHairX = Drawing.new("Circle"), Drawing.new("Circle")
--
CrossHairX.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
CrossHairX.Thickness = 1
CrossHairX.ZIndex = 3

do
CrosshairTab:AddToggle('zCrosshairX_Toggle', {Text = 'Enable', Default = false}):AddColorPicker("eCrosshairX_Color", {Default = Color3.fromRGB(208, 123, 255)}):OnChanged(function()
CrossHairX.Visible = Toggles.zCrosshairX_Toggle.Value
end)

Options.eCrosshairX_Color:OnChanged(function()
CrossHairX.Color = Options.eCrosshairX_Color.Value
end)

CrosshairTab:AddToggle('Crosshair_Filled1', {Text = 'Filled', Default = false}):OnChanged(function()
CrossHairX.Filled = Toggles.Crosshair_Filled1.Value
end)

CrosshairTab:AddSlider('Crosshair_Radius', {Text = 'Size', Suffix = "°", Default = 2, Min = 0, Max = 100, Rounding = 0, Compact = true}):OnChanged(function(CrosshairXRadius)
CrossHairX.Radius = CrosshairXRadius
end)
end


local CustomHitsoundsTabBox = Tabs.MiscellaneousTab:AddLeftTabbox('Custom Hitsounds')
local PlayerHitsoundsTab = CustomHitsoundsTabBox:AddTab('Custom Hitsounds')

--* Player Hitsounds *--

SoundService.PlayerHitHeadshot.Volume = 5
SoundService.PlayerHitHeadshot.Pitch = 1
SoundService.PlayerHitHeadshot.EqualizerSoundEffect.HighGain = -1.5
local sounds = {["Defualt Headshot"] = "rbxassetid://9119561046",["Defualt Body"] = "rbxassetid://9114487369",Neverlose = "rbxassetid://8726881116",Gamesense = "rbxassetid://4817809188",One = "rbxassetid://7380502345",Bell = "rbxassetid://6534947240",Rust = "rbxassetid://1255040462",TF2 = "rbxassetid://2868331684",Slime = "rbxassetid://6916371803",["Among Us"] = "rbxassetid://5700183626",Minecraft = "rbxassetid://4018616850",["CS:GO"] = "rbxassetid://6937353691",Saber = "rbxassetid://8415678813",Baimware = "rbxassetid://3124331820",Osu = "rbxassetid://7149255551",["TF2 Critical"] = "rbxassetid://296102734",Bat = "rbxassetid://3333907347",["Call of Duty"] = "rbxassetid://5952120301",Bubble = "rbxassetid://6534947588",Pick = "rbxassetid://1347140027",Pop = "rbxassetid://198598793",Bruh = "rbxassetid://4275842574",Bamboo = "rbxassetid://3769434519",Crowbar = "rbxassetid://546410481",Weeb = "rbxassetid://6442965016",Beep = "rbxassetid://8177256015",Bambi = "rbxassetid://8437203821",Stone = "rbxassetid://3581383408",["Old Fatality"] = "rbxassetid://6607142036",Click = "rbxassetid://8053704437",Ding = "rbxassetid://7149516994",Snow = "rbxassetid://6455527632",Laser = "rbxassetid://7837461331",Mario = "rbxassetid://2815207981",Steve = "rbxassetid://4965083997"}

PlayerHitsoundsTab:AddToggle('Enabled_Toggle1', {Text = 'Enable', Default = false})

PlayerHitsoundsTab:AddDropdown('HeadshotHit', {Values = { 'Defualt Headshot','Neverlose','Gamesense','One','Bell','Rust','TF2','Slime','Among Us','Minecraft','CS:GO','Saber','Baimware','Osu','TF2 Critical','Bat','Call of Duty','Bubble','Pick','Pop','Bruh','Bamboo','Crowbar','Weeb','Beep','Bambi','Stone','Old Fatality','Click','Ding','Snow','Laser','Mario','Steve','Snowdrake' },Default = 1, Multi = false, Text = 'Head Hitsound:'})
Options.HeadshotHit:OnChanged(function()
local soundId = sounds[Options.HeadshotHit.Value]
game:GetService("SoundService").PlayerHitHeadshot.SoundId = soundId
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end)

PlayerHitsoundsTab:AddSlider('Volume_Slider', {Text = 'volume', Default = 5, Min = 0, Max = 10, Rounding = 0, Compact = true,}):OnChanged(function(vol)
SoundService.PlayerHitHeadshot.Volume = vol
end)

PlayerHitsoundsTab:AddSlider('Pitch_Slider', {Text = 'pitch', Default = 1, Min = 0, Max = 2, Rounding = 2, Compact = true,}):OnChanged(function(pich)
SoundService.PlayerHitHeadshot.Pitch = pich
end)

PlayerHitsoundsTab:AddInput('HeadShotHitAssetID', {Default = "rbxassetid://9119561046",Numeric = false,Finished = true,Text = 'custom sound:',Placeholder = "rbxassetid://9119561046",}):OnChanged(function(CustomSoundID)
SoundService.PlayerHitHeadshot.SoundId = CustomSoundID
end)
--
PlayerHitsoundsTab:AddToggle('Enabled_Toggle2', {Text = 'enabled', Default = false})

PlayerHitsoundsTab:AddDropdown('Hit', {Values = { 'Defualt Body','Neverlose','Gamesense','One','Bell','Rust','TF2','Slime','Among Us','Minecraft','CS:GO','Saber','Baimware','Osu','TF2 Critical','Bat','Call of Duty','Bubble','Pick','Pop','Bruh','Bamboo','Crowbar','Weeb','Beep','Bambi','Stone','Old Fatality','Click','Ding','Snow','Laser','Mario','Steve','Snowdrake' },Default = 1, Multi = false, Text = 'Body Hitsound:'})
Options.Hit:OnChanged(function()
local soundId = sounds[Options.Hit.Value]
game:GetService("SoundService").PlayerHit2.SoundId = soundId
game:GetService("SoundService").PlayerHit2.Playing = true
end)

PlayerHitsoundsTab:AddSlider('Volume_Slider', {Text = 'volume', Default = 5, Min = 0, Max = 10, Rounding = 0, Compact = true,}):OnChanged(function(vole)
SoundService.PlayerHit2.Volume = vole
end)

PlayerHitsoundsTab:AddSlider('Pitch_Slider', {Text = 'pitch', Default = 1, Min = 0, Max = 2, Rounding = 2, Compact = true,}):OnChanged(function(piche)
SoundService.PlayerHit2.Pitch = piche
end)

PlayerHitsoundsTab:AddInput('PlayerHitAssetID', {Default = "rbxassetid://9114487369",Numeric = false,Finished = true,Text = 'custom sound:',Placeholder = "rbxassetid://9114487369",}):OnChanged(function(CustomSoundID)
SoundService.PlayerHit2.SoundId = CustomSoundID
end)

local XrayTabBox = Tabs.MiscellaneousTab:AddRightTabbox('xray')
local XrayTab = XrayTabBox:AddTab('xray')

--* X-Ray *--

local XRayEnabled = false
local CurrentSliderValue = 50
XrayTab:AddToggle('Xray', {Text = 'Enable', Default = false, Tooltip}):AddKeyPicker('XRayKey', {Default = 'Non', SyncToggleState = true, Mode = 'Toggle', Text = 'X-Ray', NoUI = true}):OnChanged(function(value)
XRayEnabled = value
if XRayEnabled then
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
if v:FindFirstChild("Hitbox") then
  v.Hitbox.Transparency = CurrentSliderValue
end
end
else
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
if v:FindFirstChild("Hitbox") then
  v.Hitbox.Transparency = 0
end
end
end
end)

XrayTab:AddSlider('XrayChangerSlider', {Text = 'transparency:', Suffix = "%", Default = 50, Min = 0, Max = 100, Rounding = 0, Compact = false}):OnChanged(function(Value)
CurrentSliderValue = Value / 100
if XRayEnabled then
CurrentSliderValue = Value / 100
end
end)

local ComExtraTabBox = Tabs.MiscellaneousTab:AddLeftTabbox('extra')
local ComExtraTab = ComExtraTabBox:AddTab('extra')

--* Extra *--

ComExtraTab:AddToggle('GameCrosshair_Value', {Text = 'remove in-game crosshair', Default = false}):AddColorPicker("GameCrosshair_Color", {Default = Color3.fromRGB(255,255,255)}):OnChanged(function(GameCrosshair)
if GameCrosshair == true then
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Crosshair.Visible = false
elseif GameCrosshair == false then
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Crosshair.Visible = true
end
end)

Options.GameCrosshair_Color:OnChanged(function(CrosshairColor_Value)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Crosshair.BackgroundColor3 = CrosshairColor_Value
end)

ComExtraTab:AddToggle('BloodSplatter', {Text = 'remove blood', Default = false}):OnChanged(function(BloodSplatter_Toggle)
if BloodSplatter_Toggle == false then
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.BloodSplatter.Visible = true
elseif BloodSplatter_Toggle == true then
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.BloodSplatter.Visible = false
end
end)











local WorldEspTabBox = Tabs.WorldTab:AddRightTabbox('world esp')
local WorldEspTab = WorldEspTabBox:AddTab('world esp')

--* Player Settings *--

_G.SettingsOre = {
iron = {
enabled = true,
colour = Color3.fromRGB(199, 172, 120),
},
nitrate = {
enabled = true,
colour = Color3.fromRGB(248, 248, 248),
},
stone = {
enabled = true,
colour = Color3.fromRGB(205, 205, 205),
},
oreDistance = 1000,
}
local settings1 = _G.SettingsOre
if settings1 == nil then
return
end

WorldEspTab:AddToggle('iron_Toggle',{Text='enabled',Default=false})

WorldEspTab:AddSlider('OreRenderDistance', {Text='distance:',Default=1000,Min=1,Max=2500,Rounding=0,Compact=false,Suffix=" studs"}):OnChanged(function(Value)
settings1.oreDistance = Value
end)

WorldEspTab:AddToggle('iron_Toggle',{Text='iron ore',Default=false}):AddColorPicker('IronColor', { Default = Color3.fromRGB(199, 172, 120), Title = 'Color', }):OnChanged(function(Value)
settings1.iron.enabled = Value
end)
Options.IronColor:OnChanged(function(Value)
settings1.iron.colour = Value
if settings1.iron.enabled then
settings1.iron.enabled = false
task.wait(0.01)
settings1.iron.enabled = true
end
end)

WorldEspTab:AddToggle('nitrate_Toggle',{Text='nitrate ore',Default=false}):AddColorPicker('NitrateColor', { Default = Color3.fromRGB(248, 248, 248), Title = 'Color', }):OnChanged(function(Value)
settings1.nitrate.enabled = Value
end)
Options.NitrateColor:OnChanged(function(Value)
settings1.nitrate.colour = Value
if settings1.nitrate.enabled then
settings1.nitrate.enabled = false
task.wait(0.01)
settings1.nitrate.enabled = true
end
end)

WorldEspTab:AddToggle('stone_Toggle',{Text='stone ore',Default=false}):AddColorPicker('StoneColor', { Default = Color3.fromRGB(205, 205, 205), Title = 'Color', }):OnChanged(function(Value)
settings1.stone.enabled = Value
end)
Options.StoneColor:OnChanged(function(Value)
settings1.stone.colour = Value
if settings1.stone.enabled then
settings1.stone.enabled = false
task.wait(0.01)
settings1.stone.enabled = true
end
end)

local Text1Font = 2
local textoutlines = true
local testsize = 11
local function get_text(text, position)
local distance = math.floor((position - workspace.Ignore.LocalCharacter.Middle.Position).Magnitude)
local final_text = tostring(text) .. "\n[" .. tostring(distance) .. "] studs"
return tostring(final_text)
end
local function worldtoviewport(position)
local a, b = workspace.CurrentCamera:WorldToViewportPoint(position)
return Vector2.new(a.X, a.Y), b
end
local function add_esp(part, text, colour, toggle)
local drawing_text = Drawing.new("Text")
drawing_text.Outline = textoutlines
drawing_text.Center = true
drawing_text.Visible = false
drawing_text.Font = Text1Font
drawing_text.Size = testsize
drawing_text.Color = colour
local rendersteploop = game:GetService("RunService").RenderStepped:connect(function()pcall(function()
if not part:IsDescendantOf(workspace) or not settings1 then
table.remove(oresDebris,part)
drawing_text:Remove()
rendersteploop:Disconnect()
end
local part_pos = part.Position
local screen_pos, on_screen = worldtoviewport(part_pos)
if not on_screen then
drawing_text.Visible = false
drawing_text.Size = testsize
drawing_text.Outline = textoutlines
drawing_text.Font = Text1Font
rendersteploop:Disconnect()
end
local oreDis = (game:GetService("Workspace").Ignore.LocalCharacter:WaitForChild("Top"):GetPivot().Position-part_pos).Magnitude
if oreDis >= settings1.oreDistance then
drawing_text.Visible = false
drawing_text.Size = testsize
drawing_text.Outline = textoutlines
drawing_text.Font = Text1Font
rendersteploop:Disconnect()
end
if text == 'Iron' and not settings1.iron.enabled then
drawing_text.Visible = false
drawing_text.Color = settings1.iron.colour
rendersteploop:Disconnect()
else if text == 'Nitrate' and not settings1.nitrate.enabled then
drawing_text.Visible = false
drawing_text.Color = settings1.nitrate.colour
rendersteploop:Disconnect()
else if text == 'Stone' and not settings1.stone.enabled then
drawing_text.Visible = false
drawing_text.Color = settings1.stone.colour
rendersteploop:Disconnect()
end
end
end
drawing_text.Visible = true
drawing_text.Text = get_text(text, part_pos)
drawing_text.Position = screen_pos
drawing_text.Size = testsize
drawing_text.Outline = textoutlines
drawing_text.Font = Text1Font
rendersteploop:Disconnect()
end)
end)
end
local function filter_models(v)
if (not v:IsA("Model")) then
return
end
local is_part = v:FindFirstChild("Part")
local children = v:GetChildren()
local child_amount = #children
if is_part then
if child_amount == 1 then
add_esp(is_part, "Stone", settings1.stone.colour, settings1.stone.enabled)
elseif child_amount == 2 then
for _, v in pairs(children) do
local brickcolor = v.BrickColor
local is_ore = v.ClassName == "MeshPart" and v.Name == "Part"
if is_ore then
  if brickcolor == BrickColor.new("Institutional white") then
    add_esp(v, "Nitrate", settings1.nitrate.colour, settings1.nitrate.enabled)
  elseif brickcolor == BrickColor.new("Burlap") then
    add_esp(v, "Iron", settings1.iron.colour, settings1.iron.enabled)
  end
end
end
end
end
end
for index, model in pairs(workspace:GetChildren()) do
filter_models(model)
end
workspace.ChildAdded:Connect(function(model)
filter_models(model)
end)

WorldEspTab:AddDivider("")

WorldEspTab:AddToggle('TextOutline2',{Text='text outlines',Default=true}):OnChanged(function(Value)
textoutlines = Value
end)

WorldEspTab:AddSlider('TextSizeSlider2', {Text = 'text size:', Default = 12, Min = 1, Max = 25, Rounding = 0, Suffix = "px", Compact = false}):OnChanged(function(TextSizeValue2)
testsize = TextSizeValue2
end)

WorldEspTab:AddDropdown('EspFont2',{Values={"0","1","2","3"},Default=3,Multi=false,Text='font:'}):OnChanged(function(Value)
Text1Font = Value
end)





local HudTabBox = Tabs.LocalTab:AddRightTabbox('Hud')
local HudTab = HudTabBox:AddTab('Hud')

--* Hud *--

HudTab:AddToggle('AWASZnfh', {Text = "remove server info",Default = false,Tooltip = "Hides Server Info",}):OnChanged(function(Chillax1)
if Chillax1 == true then
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.ServerInfo.Visible = false
elseif Chillax1 == false then
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.ServerInfo.Visible = true
end
end)

HudTab:AddToggle('AWAaSZasanfh', {Text = "remove server status",Default = false,Tooltip = "Hides Server Status",}):OnChanged(function(Chillax2)
if Chillax2 == true then
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.ServerStatus.Visible = false
elseif Chillax2 == false then
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.ServerStatus.Visible = true
end
end)

HudTab:AddToggle('GnAf', {Text = "chat visible",Default = true,Tooltip = "Hides chat )",}):OnChanged(function(HideChat)
for I,V in pairs(getgc(true)) do
if type(V) == "function" then
if debug.getinfo(V).name == "SetChatVisible" then
  V(HideChat)
end
end
end
end)

HudTab:AddLabel('energy:'):AddColorPicker('Energy_Color_Value', { Default = Color3.fromRGB(197,187,40)})
Options.Energy_Color_Value:OnChanged(function(Energy_Color_Value)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Vitals.EnergyFrame.Energy.BackgroundColor3 = Energy_Color_Value
end)

HudTab:AddLabel('health:'):AddColorPicker('Health_Color_Value', { Default = Color3.fromRGB(78,153,74)})
Options.Health_Color_Value:OnChanged(function(Health_Color_Value)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Vitals.HealthFrame.Health.BackgroundColor3 = Health_Color_Value
end)

HudTab:AddLabel('ammo:'):AddColorPicker('Ammo_Color_Value', { Default = Color3.fromRGB(255,255,255)})
Options.Ammo_Color_Value:OnChanged(function(Ammo_Color_Value)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Ammo.TextColor3 = Ammo_Color_Value
end)

HudTab:AddSlider('Vitals_Transparency', {Text = 'vitals transparency', Suffix = "%", Default = 10, Min = 0, Max = 100, Rounding = 0, Compact = true}):OnChanged(function(VitalsTransparency)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Vitals.EnergyFrame.Energy.BackgroundTransparency = VitalsTransparency / 100
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Vitals.HealthFrame.Health.BackgroundTransparency = VitalsTransparency / 100
end)

HudTab:AddSlider('Background_Transparency', {Text = 'inventory transparency', Suffix = "%", Default = 70, Min = 0, Max = 100, Rounding = 0, Compact = true}):OnChanged(function(InventoryTransparency)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.BackgroundTransparency = InventoryTransparency / 100
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Hotbar.BackgroundTransparency = InventoryTransparency / 100
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Armor.BackgroundTransparency = InventoryTransparency / 100
end)



--// UI Settings \\--

--// Game
local GameID = Tabs.UISettings:AddLeftGroupbox('Game')
GameID:AddInput('GameID_Check', {Default = 'Game ID', Numeric = true, Finished = false, Text = 'Game ID:', Placeholder = 'Game ID Here'})
GameID:AddButton('Join Game', function()
game:GetService("TeleportService"):Teleport(Options.GameID_Check.Value, plr)
end)

--// Menu
local MenuGroup = Tabs.UISettings:AddRightGroupbox('Menu')

MenuGroup:AddLabel(""..game:GetService("Players").LocalPlayer.PlayerGui.GameUI.ServerInfo.Text.."", true)
local playerCountLabel = MenuGroup:AddLabel("Player Count: 0", nil, true)
local function updatePlayerCount()
local playerCount = #game:GetService("Players"):GetPlayers()
playerCountLabel:SetText("Players Online: " .. playerCount)
end
game:GetService("Players").PlayerAdded:Connect(updatePlayerCount)
game:GetService("Players").PlayerRemoving:Connect(updatePlayerCount)
updatePlayerCount()

MenuGroup:AddLabel(' Made by:<font color="#de6cff"> skatemain</font> 👑', true)

MenuGroup:AddButton('Unload Script', function() Library:Unload()
for i,v in pairs(Toggles) do
v:SetValue(false)
Library:Notify('Unloaded!', 1)
end
end)

MenuGroup:AddButton('Panic Button', function()
for i,v in pairs(Toggles) do
v:SetValue(false)
Library:Notify('Panic Button!', 1)
end
end)

MenuGroup:AddButton('Copy Discord', function()
if pcall(setclipboard,"@skatemain") then
Library:Notify('Successfully copied discord link to your clipboard!', 5)
end
end)

MenuGroup:AddToggle('WatermarkToggle', { Text = 'Watermark', Default = false, Tooltip = nil })
Toggles.WatermarkToggle:OnChanged(function()
while Toggles.WatermarkToggle.Value do
task.wait(1)
local fps = string.format('%.0f', game.Stats.Workspace.Heartbeat:GetValue())
local ping = string.format('%.0f', game.Stats.Network.ServerStatsItem["Data Ping"]:GetValue())
Library:SetWatermark('ethernality.wtf - FPS: ' .. fps .. ' | Ping: ' .. ping .. ' | [trident survival]')
Library:SetWatermarkVisibility(true)
end
Library:SetWatermarkVisibility(false)
end)

MenuGroup:AddToggle('UISettings_KeybindFrameVisibility', {Text = 'Keybind', Default = true}):OnChanged(function()
Library.KeybindFrame.Visible = Toggles.UISettings_KeybindFrameVisibility.Value
end)

MenuGroup:AddLabel('Menu Keybind'):AddKeyPicker('MenuKeybind', { Default = 'Insert', NoUI = true, Text = 'Menu keybind' })
Library.ToggleKeybind = Options.MenuKeybind

--// Manager
SaveManager:SetLibrary(Library)
SaveManager:SetFolder('ethernality.wtf/folder')
SaveManager:BuildConfigSection(Tabs.UISettings)
SaveManager:IgnoreThemeSettings()
ThemeManager:SetLibrary(Library)
ThemeManager:SetFolder('ethernality.wtf/themes')
ThemeManager:ApplyToTab(Tabs.UISettings)

--// Script Loaded
local Time = (string.format("%."..tostring(Decimals).."f", os.clock() - Clock))
Library:Notify(("Script [Loaded] In - "..tostring(Time).."s"), 15)



--Wrapping function - needed to unload(Keep at end of script)
loadstring(game:HttpGet('https://raw.githubusercontent.com/EIOlmqV6v1owgJBEoqj5lK9p01SFE2THpxcOnvX/LinoriaBurnEdition/main/LoaderManager.lua'))
