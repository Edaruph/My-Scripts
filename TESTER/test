local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()

local rarm = char:FindFirstChild("LeftHand")
local larm = char:FindFirstChild("RightHand")

_G.BallName = ""
_G.Magnitude = 25
_G.Enabled = true
_G.Path = nil

local props = {
    size = Vector3.new(1.75, 1.75, 1.75),
    shape = Enum.PartType.Ball,
    material = Enum.Material.SmoothPlastic
}

local function findBalls()
    local result = {}
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            if part.Size == props.size and part.Material == props.material and part.Shape == props.shape then
                table.insert(result, part)
            end
        end
    end
    return result
end

local function fire(ball)
    firetouchinterest(rarm, ball, 0)
    firetouchinterest(larm, ball, 0)
    wait()
    firetouchinterest(rarm, ball, 1)
    firetouchinterest(larm, ball, 1)
end

local function check()
    local balls = _G.Path and _G.Path:GetChildren() or findBalls()
    for _, ball in pairs(balls) do
        if (ball.Position - char.HumanoidRootPart.Position).Magnitude <= _G.Magnitude then
            _G.Path = ball.Parent
            fire(ball)
        end
    end
end

local function balladded(ball)
    if (ball.Position - char.HumanoidRootPart.Position).Magnitude <= _G.Magnitude then
        _G.Path = ball.Parent
        fire(ball)
    end
end

if _G.Enabled then
    local connection
    connection = game:GetService("RunService").RenderStepped:Connect(function()
        check()
    end)
    
    workspace.ChildAdded:Connect(function(child)
        if child:IsA("BasePart") and child.Size == props.size and child.Material == props.material and child.Shape == props.shape then
            balladded(child)
        end
    end)
end
